package xml.booking.repositories;

import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import xml.booking.model.Accommodation;
import xml.booking.model.AccommodationUnit;
import xml.booking.model.AdditionalService;

/**
* Generated by Spring Data Generator on 19/06/2019
*/
@Repository
public interface AccommodationRepository extends JpaRepository<Accommodation, Long>, JpaSpecificationExecutor<Accommodation> {

	List<Accommodation> findByDeleted(boolean deleted);
	Page<Accommodation> findByDeleted(Pageable page, boolean deleted);
	Accommodation findByIdAndDeleted(Long id, boolean deleted);
	
	@Query("SELECT accUnit FROM Accommodation AS acc inner join acc.accommodationUnit as accUnit WHERE acc.id = ?1 AND acc.deleted=false AND accUnit.deleted=false")
	Page<AccommodationUnit> findAccommodationUnits(Pageable page, Long id);
	
	@Query("SELECT addService FROM Accommodation AS acc inner join acc.additionalService as addService WHERE acc.id = ?1 AND acc.deleted=false AND addService.deleted=false")
	Page<AdditionalService> findAdditionalServices(Pageable page, Long id);

}
